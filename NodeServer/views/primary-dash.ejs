<!-- This file is the main window for viewing the graphs -->

<html>

<head>
    <script src="https://cdn.jsdelivr.net/npm/p5@1.1.9/lib/p5.js"></script>
    <!-- <script src="scripts/sketch.js" type="text/javascript"></script> -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
        integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
        crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
        integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
        crossorigin=""></script>

</head>

<body style="background-color:gray;">
    <div style="height:92.5vh;overflow: hidden;">
        <div style="width:95%;height:auto;margin-bottom:20px;">
        <img src="/public/uon.png" style="height:auto;width:200px;display:block-inline;margin-top:20px;float:right;">
        <h1 style="font-family: helvetica; font-weight:100;display:inline-block;color:white">Primary Telemetry
        </h1></br>
        <a href="/">Menu</a>
        </div>
        
        <h4 style="color:white;font-family: arial;">Page View: <select onchange="changeview()" id="pageSelector"
                name="Page View">
                <option value="default">Default</option>
                <!-- <option value="GPS">GPS</option> -->
                <option value="Accelerometer">Accelerometer</option>
                <!-- <option value="Battery">Battery</option> -->
                <option value="Speed Large">Speed Large</option>
                <option value="Acceleration Large">Acceleration Large</option>
                <option value="Battery Large">Battery Large</option>

            </select></h4>
        <!-- https://stackoverflow.com/questions/45149062/chart-js-how-to-show-cursor-pointer-for-labels-legends-in-line-chart USE this for cursor -->
        <div style="height:72.5%">
            <!-- <input type="range" id="slider1" orient="vertical"
                style="display:inline-block;-webkit-appearance: slider-vertical;width:10px;height:25%"> -->
                <div style="height:40%;width:80%;margin: 0 auto;">
            <canvas style="background-color: black;height:100%;width:100%"
                id="myChart1"></canvas>
            </div>
            <div style="height:40%;width:80%;margin: 0 auto">
            <!-- <input type="range" id="slider2" orient="vertical"
                style="display:inline-block;-webkit-appearance: slider-vertical;width:10px;height:25%"> -->
            <canvas style="background-color: black;height:100%;width:100%"
                id="myChart2"></canvas>
            </div>
            <!-- <input type="range" id="slider3" orient="vertical"
                style="display:inline-block;-webkit-appearance: slider-vertical;width:10px;height:25%"> -->
            <div style="height:40%;width:80%;margin: 0 auto;">
            <canvas style="background-color: black;height:100%;width:100%"
                id="myChart3"></canvas>
            </div>
            <canvas style="height:100%px;width:100%;background-color: black;display:none;"
                id="speed-large-chart"></canvas>
            <canvas style="height:100%px;width:100%;background-color: black;display:none;"
                id="acc-large-chart"></canvas>
            <canvas style="height:100%px;width:100%;background-color: black;display:none;"
                id="battery-large-chart"></canvas>
            <!-- <div>
                <input type="range" id="slider4" onchange="updateTimeBase(myLineChart1, '#slider4')" style="display: inline-block;width:30%;margin-right: 3%;margin-left:1%">
                <input type="range" id="slider5" onchange="updateTimeBase(myLineChart2, '#slider5')" style="display: inline-block;width:30%;margin-right:3%;">
                <input type="range" id="slider6" onchange="updateTimeBase(myLineChart3, '#slider6')" style="display: inline-block;width:30%">
            </div> -->
            <!-- <canvas style="height:60%px;width:20%;display:inline-block;background-color: black;margin-bottom:26%" id="myChart4"></canvas> -->
            <!-- <div style="height:500px;width:50%;display:inline-block" id="mapid"></div> -->
            <!-- <img id="image" style="height:auto;width:58%;display:inline-block;margin-left:0%;margin-top:20px;" src="/public/image.png"> -->
            <!-- <canvas style="height:60%px;width:20%;background-color: black;margin-bottom:26%;float:right;" id="myChart4"></canvas> -->
                
        </div>
        <a href="/public/data.csv" download="data.csv">
        Download data file here
        </a>
        <!-- <div id="log" style="font-size: 15; font-family: Helvetica;">
            <p>Console Log</p>
            <div style="width:100%;height:20%;background-color: white;">
                <p><em>14:20:52</em> startup</p>
            </div>
        </div> -->
    </div>
<div style="height:30px;margin-top:20px;text-align:center;font-size: 15;color:white;font-family: Arial, Helvetica, sans-serif;">Instructions are at <a style="color:blue" href="https://github.com/mbh1620/Car-Telemetry-Receive-Server">https://github.com/mbh1620/Car-Telemetry-Receive-Server</a></div>
</body>
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
<script src="/socket.io/socket.io.js"></script>
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="/scripts/charts.js" ></script>
<script src="/scripts/functions.js" ></script>

<script>
    var ctx = document.getElementById('speed-large-chart').getContext('2d');
    var myLineChartSpeed = new Chart(ctx, {
        // The type of chart we want to create
        type: 'line',

        // The data for our dataset
        data: {
            labels: [, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,
                , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,],
            datasets: [{
                label: 'Speed m/s',
                borderColor: 'rgb(255, 99, 132)',
                data: [, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,
                    , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,],

            }]
        },

        // Configuration options go here
        options: {
            responsive: false,
            elements: {
                line: {
                    tension: 0
                },
                point: {
                    radius: 0
                }
            },
            animation: {
                duration: 0
            }
        }
    });

    var ctx = document.getElementById('acc-large-chart').getContext('2d');
    var myLineChartAcceleration = new Chart(ctx, {
        // The type of chart we want to create
        type: 'line',

        // The data for our dataset
        data: {
            labels: [, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,
                , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,],
            datasets: [{
                label: 'Acceleration m/s^2',
                borderColor: 'rgb(20, 255, 132)',
                data: [, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,
                    , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,],

            }]
        },

        // Configuration options go here
        options: {
            responsive: false,
            elements: {
                line: {
                    tension: 0
                },
                point: {
                    radius: 0
                }
            },
            animation: {
                duration: 0
            }
        }
    });
    var ctx = document.getElementById('battery-large-chart').getContext('2d');
    var myLineChartBattery = new Chart(ctx, {
        // The type of chart we want to create
        type: 'line',

        // The data for our dataset
        data: {
            labels: [, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,
                , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,],
            datasets: [{
                label: 'Battery m/s',
                borderColor: 'rgb(20, 135, 255)',
                data: [, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,
                    , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,],

            }]
        },

        // Configuration options go here
        options: {
            responsive: false,
            elements: {
                line: {
                    tension: 0
                },
                point: {
                    radius: 0
                }
            },
            animation: {
                duration: 0
            }
        }
    });

    function buttonPressed() {
        update(10, '14:00');
    }

    function update(data, label, chart) {
        chart.data.datasets[0].data.push(data);
        chart.data.datasets[0].data.shift();
        chart.data.labels.push(label);
        chart.data.labels.shift();
        chart.update();
    }

    var socket = io();
    socket.on('new-data', function (msg) {
        console.log(msg);
        update(msg.data[0], msg.data[3], myLineChart1);
        update(msg.data[1], msg.data[3], myLineChart2);
        update(msg.data[2], msg.data[3], myLineChart3);
        update(msg.data[0], msg.data[3], myLineChartSpeed);
        update(msg.data[1], msg.data[3], myLineChartAcceleration);
        update(msg.data[2], msg.data[3], myLineChartBattery);
        // update(msg.data[0], '14:05', myLineChart4);
    })



</script>
<script>
    var mymap = L.map('mapid').setView([52.0715, -1.0157], 14.3);
    L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
        maxZoom: 18,
        id: 'mapbox/streets-v11',
        tileSize: 512,
        zoomOffset: -1,
        accessToken: 'pk.eyJ1IjoibWJoMTYyMCIsImEiOiJjankwb244aWgwNHd1M2dsYWtkd2h2NWdwIn0.74tfwmTddrE7BpzyAA-0hw'
    }).addTo(mymap);
</script>
<script>
    function changeview() {
        //grab the value of the select box and then change the onscreen elements
        var page = $('#pageSelector').val();
        console.log(page);
        var default_view_elements = [$('#myChart1'), $('#myChart2'), $('#myChart3'), $('#myChart4'), $('#image'), $('#slider1'), $('#slider2'),
        $('#slider3'), $('#slider4'), $('#slider5'), $('#slider6')];
        var speed_large = [$('#speed-large-chart')];
        var acceleration_large = [$('#acc-large-chart')];
        var battery_large = [$('#battery-large-chart')];


        if (page == "default") {
            for (var i = 0; i < default_view_elements.length; i++) {
                default_view_elements[i].show();
                console.log("hidden");
            }
                speed_large[0].hide();
                acceleration_large[0].hide();
                battery_large[0].hide();
        } else if (page == "Speed Large") {
            for (var i = 0; i < default_view_elements.length; i++) {
                default_view_elements[i].hide();
                console.log("hidden");
            }
            acceleration_large[0].hide();
            battery_large[0].hide();
            speed_large[0].show();
            myLineChartSpeed.resize();
        } else if (page == "Acceleration Large") {
            for (var i = 0; i < default_view_elements.length; i++) {
                default_view_elements[i].hide();
                console.log("hidden");
            }
            battery_large[0].hide();
            acceleration_large[0].show();
            myLineChartAcceleration.resize();
        } else if (page == "Battery Large") {
            for (var i = 0; i < default_view_elements.length; i++) {
                default_view_elements[i].hide();
                console.log("hidden");
            }
            speed_large[0].hide();
            acceleration_large[0].hide();
            battery_large[0].show()
            myLineChartBattery.resize();
        } else {
            for (var i = 0; i < default_view_elements.length; i++) {
                default_view_elements[i].hide();
                console.log("hidden");
            }
        }
    }

</script>

</html>